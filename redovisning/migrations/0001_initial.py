# Generated by Django 2.0.1 on 2018-02-16 19:36

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Attestation',
            fields=[
                ('attest_id', models.AutoField(primary_key=True, serialize=False)),
                ('printed_name', models.CharField(max_length=200)),
                ('date_signed', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Boardmember',
            fields=[
                ('board_member_id', models.AutoField(primary_key=True, serialize=False)),
                ('member_name', models.CharField(max_length=200)),
                ('post', models.CharField(max_length=200)),
                ('date_of_birth', models.DateField()),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=64)),
                ('gender', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('contact_id', models.AutoField(primary_key=True, serialize=False)),
                ('contact_name', models.CharField(max_length=200)),
                ('contact_type', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=64)),
                ('city', models.CharField(max_length=200)),
                ('zipcode', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='Meeeting',
            fields=[
                ('meeting_id', models.AutoField(primary_key=True, serialize=False)),
                ('no_of_meetings', models.IntegerField()),
                ('annual_meeting_date', models.DateField()),
                ('current_statuses_attached', models.BooleanField()),
                ('statutes_not_attached', models.BooleanField()),
                ('activity', models.TextField()),
                ('collaboration_with_others', models.BooleanField()),
                ('bhuf_activity', models.BooleanField()),
                ('year', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('date_of_birth', models.DateField()),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=64)),
                ('address', models.TextField()),
                ('gender', models.CharField(max_length=16)),
                ('city', models.CharField(max_length=200)),
                ('zipcode', models.CharField(max_length=16)),
                ('date_added', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('org_id', models.AutoField(primary_key=True, serialize=False)),
                ('org_name', models.CharField(max_length=200)),
                ('association', models.CharField(max_length=200)),
                ('corporate', models.CharField(max_length=200)),
                ('national_organization', models.CharField(max_length=200)),
                ('no_of_members', models.IntegerField()),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=64)),
                ('account_no', models.CharField(max_length=64)),
                ('clr_no', models.CharField(max_length=32)),
                ('agree_send_info', models.BooleanField()),
                ('website', models.CharField(max_length=200)),
                ('social_link', models.CharField(max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='org_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redovisning.Organization'),
        ),
        migrations.AddField(
            model_name='meeeting',
            name='org_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redovisning.Organization'),
        ),
        migrations.AddField(
            model_name='contact',
            name='org_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redovisning.Organization'),
        ),
        migrations.AddField(
            model_name='boardmember',
            name='org_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redovisning.Organization'),
        ),
        migrations.AddField(
            model_name='attestation',
            name='org_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redovisning.Organization'),
        ),
    ]
